[{"D:\\Blockchain-Ecommerce-App\\frontend\\src\\index.js":"1","D:\\Blockchain-Ecommerce-App\\frontend\\src\\App.js":"2","D:\\Blockchain-Ecommerce-App\\frontend\\src\\Store.js":"3","D:\\Blockchain-Ecommerce-App\\frontend\\src\\ethereum.js":"4"},{"size":546,"mtime":1610610143306,"results":"5","hashOfConfig":"6"},{"size":966,"mtime":1610608117762,"results":"7","hashOfConfig":"6"},{"size":1571,"mtime":1610612487759,"results":"8","hashOfConfig":"6"},{"size":1160,"mtime":1610610898370,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1pzulqv",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Blockchain-Ecommerce-App\\frontend\\src\\index.js",[],["20","21"],"D:\\Blockchain-Ecommerce-App\\frontend\\src\\App.js",[],"D:\\Blockchain-Ecommerce-App\\frontend\\src\\Store.js",["22"],"import React from 'react';\r\nimport { ethers } from 'ethers';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:4000';\r\n\r\nconst ITEMS = [\r\n  {\r\n    id: 1,\r\n    price: ethers.utils.parseEther('100')\r\n  }, \r\n  {\r\n    id: 2,\r\n    price: ethers.utils.parseEther('200')\r\n  }\r\n];\r\n\r\nfunction Store({ paymentProcessor, dai }) {\r\n  const buy = async item => {\r\n    const response1 = await axios.get(`${API_URL}/api/getPaymentId/${item.id}`);\r\n\r\n    const tx1 = await dai.approve(paymentProcessor.address, item.price);  \r\n    await tx1.wait();\r\n\r\n    const tx2 = await paymentProcessor.pay(item.price, response1.data.paymentId);\r\n    const receipt = await tx2.wait();\r\n\r\n    await new Promise(resolve => setTimeout(resolve, 5000)); \r\n    const response2 = await axios.get(`${API_URL}/api/getItemUrl/${response1.data.paymentId}`);\r\n    console.log(response2);\r\n  };\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      <li className=\"list-group-item\">\r\n        Buy item1 - <span className='font-weight-bold'>100 DAI</span>\r\n        <button \r\n          type=\"button\" \r\n          className=\"btn btn-primary float-right\"\r\n          onClick={() => buy(ITEMS[0])}\r\n        >\r\n          Buy\r\n        </button>\r\n      </li>\r\n      <li className=\"list-group-item\">\r\n        Buy item2 - <span className='font-weight-bold'>200 DAI</span>\r\n        <button \r\n          type=\"button\" \r\n          className=\"btn btn-primary float-right\"\r\n          onClick={() => buy(ITEMS[1])}\r\n        >\r\n          Buy\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Store;","D:\\Blockchain-Ecommerce-App\\frontend\\src\\ethereum.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":26,"column":11,"nodeType":"29","messageId":"30","endLine":26,"endColumn":18},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'receipt' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]